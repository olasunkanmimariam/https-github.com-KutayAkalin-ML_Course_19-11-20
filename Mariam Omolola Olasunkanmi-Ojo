{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled2.ipynb","provenance":[],"collapsed_sections":[],"mount_file_id":"16rVXrgD0qju2xGbcsZL2HRaU6F4lLHuC","authorship_tag":"ABX9TyNLqugejJO139XhD0Wxq0hp"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RPsgdnyK78fW","executionInfo":{"status":"ok","timestamp":1606270710512,"user_tz":-60,"elapsed":4832,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"76e415e7-a3d1-4493-cf31-b9c5d9c95266"},"source":["from google.colab import drive\n","drive.mount(\"/content/drive\")"],"execution_count":50,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8qIA-pyeBcL1","executionInfo":{"status":"ok","timestamp":1606270727844,"user_tz":-60,"elapsed":4520,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"execution_count":51,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vjc0tpc3FRde","executionInfo":{"status":"ok","timestamp":1606270730412,"user_tz":-60,"elapsed":5893,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df = pd.read_csv('/content/drive/MyDrive/Global ai/churn.csv')"],"execution_count":52,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"I-bnth8jGAHX","executionInfo":{"status":"ok","timestamp":1606270740244,"user_tz":-60,"elapsed":7826,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"b8a4796e-7660-4c4b-ffaf-efb56c80db4e"},"source":["df.head(4)"],"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>AccountWeeks</th>\n","      <th>ContractRenewal</th>\n","      <th>DataPlan</th>\n","      <th>DataUsage</th>\n","      <th>CustServCalls</th>\n","      <th>DayMins</th>\n","      <th>DayCalls</th>\n","      <th>MonthlyCharge</th>\n","      <th>OverageFee</th>\n","      <th>RoamMins</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>128</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.7</td>\n","      <td>1</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>89.0</td>\n","      <td>9.87</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>107</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.7</td>\n","      <td>1</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>82.0</td>\n","      <td>9.78</td>\n","      <td>13.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>52.0</td>\n","      <td>6.06</td>\n","      <td>12.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>57.0</td>\n","      <td>3.10</td>\n","      <td>6.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Churn  AccountWeeks  ContractRenewal  ...  MonthlyCharge  OverageFee  RoamMins\n","0      0           128                1  ...           89.0        9.87      10.0\n","1      0           107                1  ...           82.0        9.78      13.7\n","2      0           137                1  ...           52.0        6.06      12.2\n","3      0            84                0  ...           57.0        3.10       6.6\n","\n","[4 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QWyP6yyhGGvL","executionInfo":{"status":"ok","timestamp":1606270740252,"user_tz":-60,"elapsed":6567,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"610b4b78-e15c-4e52-970a-fe7c0996afe6"},"source":["df.info()"],"execution_count":54,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3333 entries, 0 to 3332\n","Data columns (total 11 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Churn            3333 non-null   int64  \n"," 1   AccountWeeks     3333 non-null   int64  \n"," 2   ContractRenewal  3333 non-null   int64  \n"," 3   DataPlan         3333 non-null   int64  \n"," 4   DataUsage        3333 non-null   float64\n"," 5   CustServCalls    3333 non-null   int64  \n"," 6   DayMins          3333 non-null   float64\n"," 7   DayCalls         3333 non-null   int64  \n"," 8   MonthlyCharge    3333 non-null   float64\n"," 9   OverageFee       3333 non-null   float64\n"," 10  RoamMins         3333 non-null   float64\n","dtypes: float64(5), int64(6)\n","memory usage: 286.6 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5wYJERVUGlXp","executionInfo":{"status":"ok","timestamp":1606270740259,"user_tz":-60,"elapsed":5229,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"cf1d3b65-39b6-4271-fb64-4847f2758286"},"source":["df.isnull().sum()"],"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Churn              0\n","AccountWeeks       0\n","ContractRenewal    0\n","DataPlan           0\n","DataUsage          0\n","CustServCalls      0\n","DayMins            0\n","DayCalls           0\n","MonthlyCharge      0\n","OverageFee         0\n","RoamMins           0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":55}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"4rB-i3TIG1y1","executionInfo":{"status":"ok","timestamp":1606270740267,"user_tz":-60,"elapsed":4307,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"d5938d9b-1c9c-4031-9065-cdf5dcc0e63b"},"source":["df.describe()"],"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>AccountWeeks</th>\n","      <th>ContractRenewal</th>\n","      <th>DataPlan</th>\n","      <th>DataUsage</th>\n","      <th>CustServCalls</th>\n","      <th>DayMins</th>\n","      <th>DayCalls</th>\n","      <th>MonthlyCharge</th>\n","      <th>OverageFee</th>\n","      <th>RoamMins</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.144914</td>\n","      <td>101.064806</td>\n","      <td>0.903090</td>\n","      <td>0.276628</td>\n","      <td>0.816475</td>\n","      <td>1.562856</td>\n","      <td>179.775098</td>\n","      <td>100.435644</td>\n","      <td>56.305161</td>\n","      <td>10.051488</td>\n","      <td>10.237294</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.352067</td>\n","      <td>39.822106</td>\n","      <td>0.295879</td>\n","      <td>0.447398</td>\n","      <td>1.272668</td>\n","      <td>1.315491</td>\n","      <td>54.467389</td>\n","      <td>20.069084</td>\n","      <td>16.426032</td>\n","      <td>2.535712</td>\n","      <td>2.791840</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>74.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>143.700000</td>\n","      <td>87.000000</td>\n","      <td>45.000000</td>\n","      <td>8.330000</td>\n","      <td>8.500000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>101.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>179.400000</td>\n","      <td>101.000000</td>\n","      <td>53.500000</td>\n","      <td>10.070000</td>\n","      <td>10.300000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000</td>\n","      <td>127.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.780000</td>\n","      <td>2.000000</td>\n","      <td>216.400000</td>\n","      <td>114.000000</td>\n","      <td>66.200000</td>\n","      <td>11.770000</td>\n","      <td>12.100000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>243.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.400000</td>\n","      <td>9.000000</td>\n","      <td>350.800000</td>\n","      <td>165.000000</td>\n","      <td>111.300000</td>\n","      <td>18.190000</td>\n","      <td>20.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             Churn  AccountWeeks  ...   OverageFee     RoamMins\n","count  3333.000000   3333.000000  ...  3333.000000  3333.000000\n","mean      0.144914    101.064806  ...    10.051488    10.237294\n","std       0.352067     39.822106  ...     2.535712     2.791840\n","min       0.000000      1.000000  ...     0.000000     0.000000\n","25%       0.000000     74.000000  ...     8.330000     8.500000\n","50%       0.000000    101.000000  ...    10.070000    10.300000\n","75%       0.000000    127.000000  ...    11.770000    12.100000\n","max       1.000000    243.000000  ...    18.190000    20.000000\n","\n","[8 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":56}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":163},"id":"MCgn7QHFG989","executionInfo":{"status":"ok","timestamp":1606270740274,"user_tz":-60,"elapsed":3344,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"32a1442c-802d-4226-e949-17a33909bb3a"},"sourcedf.groupby(by='Churn').count()                                                                                                "],"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AccountWeeks</th>\n","      <th>ContractRenewal</th>\n","      <th>DataPlan</th>\n","      <th>DataUsage</th>\n","      <th>CustServCalls</th>\n","      <th>DayMins</th>\n","      <th>DayCalls</th>\n","      <th>MonthlyCharge</th>\n","      <th>OverageFee</th>\n","      <th>RoamMins</th>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","      <td>2850</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","      <td>483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       AccountWeeks  ContractRenewal  ...  OverageFee  RoamMins\n","Churn                                 ...                      \n","0              2850             2850  ...        2850      2850\n","1               483              483  ...         483       483\n","\n","[2 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":57}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":481},"id":"_Pzn3jO1sMO9","executionInfo":{"status":"ok","timestamp":1606270741251,"user_tz":-60,"elapsed":3294,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"d367a699-6dbd-42f8-cba6-b0faf872ef8c"},"source":["#@title Default title text\n","plt.figure(figsize=(16,10))\n","sns.distplot(df['OverageFee'])"],"execution_count":58,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/seaborn/distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f08038c12e8>"]},"metadata":{"tags":[]},"execution_count":58},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x720 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"nAsG78uWt6jY","executionInfo":{"status":"ok","timestamp":1606270741257,"user_tz":-60,"elapsed":2360,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['Roam_bin']=np.array(np.floor(np.array(df['RoamMins'])/10.))"],"execution_count":59,"outputs":[]},{"cell_type":"code","metadata":{"id":"-XEeWmHfNZId","executionInfo":{"status":"ok","timestamp":1606270742594,"user_tz":-60,"elapsed":1978,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["\n","df['Overage_bin']=np.array(np.floor(np.array(df['OverageFee'])/10.))"],"execution_count":60,"outputs":[]},{"cell_type":"code","metadata":{"id":"30kzvvIkOp61","executionInfo":{"status":"ok","timestamp":1606270742604,"user_tz":-60,"elapsed":1139,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['MonthlyCharge_bin']=np.array(np.floor(np.array(df['MonthlyCharge'])/10.))"],"execution_count":61,"outputs":[]},{"cell_type":"code","metadata":{"id":"y6vmRG_YC8hR","executionInfo":{"status":"ok","timestamp":1606270743254,"user_tz":-60,"elapsed":1067,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['DayMins_bin']=np.array(np.floor(np.array(df['DayMins'])/10.))"],"execution_count":62,"outputs":[]},{"cell_type":"code","metadata":{"id":"iry-T9bWDPtt","executionInfo":{"status":"ok","timestamp":1606270744030,"user_tz":-60,"elapsed":1097,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['AccountWeeks_bin']=np.array(np.floor(np.array(df['AccountWeeks'])/10.))"],"execution_count":63,"outputs":[]},{"cell_type":"code","metadata":{"id":"3M9Qf7y1DYaq","executionInfo":{"status":"ok","timestamp":1606270744625,"user_tz":-60,"elapsed":924,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['DayCalls_bin']=np.array(np.floor(np.array(df['DayCalls'])/10.))"],"execution_count":64,"outputs":[]},{"cell_type":"code","metadata":{"id":"BZYgXfC3EyaH","executionInfo":{"status":"ok","timestamp":1606270745415,"user_tz":-60,"elapsed":898,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df['DataUsage_bin']=np.array(np.floor(np.array(df['DataUsage'])/10.))"],"execution_count":65,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"j2FbPD8eE_tm","executionInfo":{"status":"ok","timestamp":1606270748520,"user_tz":-60,"elapsed":2368,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"18f70dee-7b3a-44b9-e9f4-1be2928f8efc"},"source":["\n","df.head(4)"],"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>AccountWeeks</th>\n","      <th>ContractRenewal</th>\n","      <th>DataPlan</th>\n","      <th>DataUsage</th>\n","      <th>CustServCalls</th>\n","      <th>DayMins</th>\n","      <th>DayCalls</th>\n","      <th>MonthlyCharge</th>\n","      <th>OverageFee</th>\n","      <th>RoamMins</th>\n","      <th>Roam_bin</th>\n","      <th>Overage_bin</th>\n","      <th>MonthlyCharge_bin</th>\n","      <th>DayMins_bin</th>\n","      <th>AccountWeeks_bin</th>\n","      <th>DayCalls_bin</th>\n","      <th>DataUsage_bin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>128</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.7</td>\n","      <td>1</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>89.0</td>\n","      <td>9.87</td>\n","      <td>10.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>26.0</td>\n","      <td>12.0</td>\n","      <td>11.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>107</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.7</td>\n","      <td>1</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>82.0</td>\n","      <td>9.78</td>\n","      <td>13.7</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>16.0</td>\n","      <td>10.0</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>52.0</td>\n","      <td>6.06</td>\n","      <td>12.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>24.0</td>\n","      <td>13.0</td>\n","      <td>11.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>57.0</td>\n","      <td>3.10</td>\n","      <td>6.6</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>29.0</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Churn  AccountWeeks  ...  DayCalls_bin  DataUsage_bin\n","0      0           128  ...          11.0            0.0\n","1      0           107  ...          12.0            0.0\n","2      0           137  ...          11.0            0.0\n","3      0            84  ...           7.0            0.0\n","\n","[4 rows x 18 columns]"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"id":"OoiLeRfxFHL_","executionInfo":{"status":"ok","timestamp":1606270749035,"user_tz":-60,"elapsed":2094,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["df=df.drop(['AccountWeeks','DataUsage','DayMins','DayCalls','MonthlyCharge','OverageFee','RoamMins'],axis=1)"],"execution_count":67,"outputs":[]},{"cell_type":"code","metadata":{"id":"buTDUurFGGCZ","executionInfo":{"status":"ok","timestamp":1606270752548,"user_tz":-60,"elapsed":1490,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["x = df.drop(['Churn'], axis = 1)\n","y = df[['Churn']]"],"execution_count":68,"outputs":[]},{"cell_type":"code","metadata":{"id":"-tbwa9wsGLfx","executionInfo":{"status":"ok","timestamp":1606270753217,"user_tz":-60,"elapsed":908,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["from sklearn import preprocessing\n","from sklearn.model_selection import train_test_split"],"execution_count":69,"outputs":[]},{"cell_type":"code","metadata":{"id":"gn-ECA6AII60","executionInfo":{"status":"ok","timestamp":1606270755100,"user_tz":-60,"elapsed":1497,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)"],"execution_count":70,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6pdsapFgIWRu","executionInfo":{"status":"ok","timestamp":1606270762590,"user_tz":-60,"elapsed":7800,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"5ed6c6c0-0fb6-430e-9670-591bf9f88cdb"},"source":["x_train.shape"],"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2333, 10)"]},"metadata":{"tags":[]},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"aZYi62YQIpM6","executionInfo":{"status":"ok","timestamp":1606270766975,"user_tz":-60,"elapsed":6340,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import r2_score"],"execution_count":72,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2T_v1jwI7ec","executionInfo":{"status":"ok","timestamp":1606270775616,"user_tz":-60,"elapsed":7290,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"72d1148d-a6dc-4865-c5e6-c49ff745852d"},"source":["from sklearn.model_selection import cross_validate\n","clf=LogisticRegression(random_state=42,n_jobs=-1)\n","clf.fit(x_train,y_train)\n","print('Accuracy of train:',clf.score(x_train,y_train))\n","print('Accuracy of test:',clf.score(x_test,y_test))"],"execution_count":73,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"stream","text":["Accuracy of train: 0.8598371195885126\n","Accuracy of test: 0.86\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Q0R2J2WnJkd9","executionInfo":{"status":"ok","timestamp":1606274683886,"user_tz":-60,"elapsed":2830,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["#Bias for training = 1-0.859=0.141\n","#Bias for test = 1- 0.86 = 0.14\n","\n","#Variance=0.001"],"execution_count":74,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DWwaIpabboPZ","executionInfo":{"status":"ok","timestamp":1606275411218,"user_tz":-60,"elapsed":3247,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"0806ba44-fe89-45b7-d549-0c403cc77ae5"},"source":["from sklearn.ensemble import RandomForestClassifier\n","classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\n","classifier.fit(x_train, y_train)\n","accuracy=classifier.score(x_test, y_test)"],"execution_count":75,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TMdFqpe4eZ30","executionInfo":{"status":"ok","timestamp":1606275481532,"user_tz":-60,"elapsed":2037,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"427c34ff-8d61-4db3-9e23-7ce89c945de0"},"source":["print(accuracy)"],"execution_count":76,"outputs":[{"output_type":"stream","text":["0.889\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BxBUnIeverXm","executionInfo":{"status":"ok","timestamp":1606275823069,"user_tz":-60,"elapsed":3054,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"ed089fa9-194b-4375-a41a-b2b52fa7e811"},"source":["from sklearn.metrics import precision_score, recall_score, accuracy_score, classification_report, f1_score\n","prediction=classifier.predict(x_test)\n","print(classification_report(y_test, prediction))"],"execution_count":77,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.91      0.96      0.94       857\n","           1       0.67      0.44      0.53       143\n","\n","    accuracy                           0.89      1000\n","   macro avg       0.79      0.70      0.73      1000\n","weighted avg       0.88      0.89      0.88      1000\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ubZU84Q2f-h1","executionInfo":{"status":"ok","timestamp":1606275999873,"user_tz":-60,"elapsed":1552,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"13cf3547-498b-4cbd-b2cd-dabb2d8c9a2e"},"source":["print(\"Precision = {}\".format(precision_score(y_test, prediction, average='macro')))\n","print(\"Recall = {}\".format(recall_score(y_test, prediction, average='macro')))\n","print(\"Accuracy = {}\".format(accuracy_score(y_test, prediction)))\n","print(\"F1 Score = {}\".format(f1_score(y_test, prediction,average='macro')))"],"execution_count":78,"outputs":[{"output_type":"stream","text":["Precision = 0.7909562726034475\n","Recall = 0.7021933725550995\n","Accuracy = 0.889\n","F1 Score = 0.7343423537267459\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"x7e1MNcZgqD-","executionInfo":{"status":"ok","timestamp":1606276541588,"user_tz":-60,"elapsed":1391,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["from sklearn.metrics import confusion_matrix\n","\n","def conftable(test,pred, imagename):\n","    confmatrix= metrics.confusion_matrix(y_test, prediction)\n","    plt.matshow(confmatrix)\n","    plt.title('Confusion matrix')\n","    plt.colorbar()\n","    plt.ylabel('True Label')\n","    plt.xlabel('Predicted Label')\n","    plt.savefig(imagename)\n","    \n","    plt.show()\n","    print(confmatrix)"],"execution_count":79,"outputs":[]},{"cell_type":"code","metadata":{"id":"80y5xnWziuYI","executionInfo":{"status":"ok","timestamp":1606276685226,"user_tz":-60,"elapsed":1204,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}}},"source":["from sklearn import metrics"],"execution_count":82,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":294},"id":"SUWYzkori4Wj","executionInfo":{"status":"ok","timestamp":1606276697741,"user_tz":-60,"elapsed":4133,"user":{"displayName":"mariam olasunkanmi-ojo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBFz_-tte9lJ9nuW-p8uc5F0GFBzUkXgK2wuCp=s64","userId":"15947454563810535958"}},"outputId":"48534d31-87f3-470b-86ad-4654776fe362"},"source":["conftable(y_test,prediction,\"conf\")"],"execution_count":83,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 288x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["[[826  31]\n"," [ 80  63]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yCfh1xJjjTvN"},"source":[""],"execution_count":null,"outputs":[]}]}